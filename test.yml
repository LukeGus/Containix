version: "3.9"
services:
  web:
    image: nginx:1.25
    container_name: my-nginx
    command: ["nginx", "-g", "daemon off;"]
    entrypoint: ["/docker-entrypoint.sh"]
    restart: always
    ports:
      - "8080:80"
      - "443:443"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      - FOO=bar
    env_file:
      - .env
    volumes:
      - webdata:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - frontend
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
    labels:
      - "traefik.enable=true"
      - "com.example.description=Web server"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    dns:
      - 8.8.8.8
      - 1.1.1.1
    user: "1000:1000"
    working_dir: /usr/share/nginx/html
    privileged: true
    read_only: false

  db:
    image: postgres:15
    container_name: my-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: testdb
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - frontend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      com.example.description: "Database server"
    depends_on:
      - web
    user: "999"
    working_dir: /var/lib/postgresql/data
    privileged: false
    read_only: true

volumes:
  webdata:
  dbdata:

networks:
  frontend:
    driver: bridge
